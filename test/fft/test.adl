@fftx.adl

module test2 (0){

	input [F32][2][2] i;
	output [F32][2][2] o;
	%%
	int i;
	op_set_F32(&($o[0][0]), 4.0f);
	op_set_F32(&($o[1][0]), -7.0f);
	for(i = 0; i < 2; i++){
		printf("%f,%fi", $i[i][0].value,$i[i][1].value);
	}
	printf("\n");
	
	%%
}

module test4 (0){
	input [F32][4][2] i;
	output [F32][4][2] o;
	%%
	int i;
	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);

	for(i = 0; i < 4; i++){
		printf("%f,%fi;", $i[i][0].value,$i[i][1].value);
	}
	printf("\n");
	%%
}

module test8 (0){
	input [F32][8][2] i;
	output [F32][8][2] o;
	%%
	int i;
	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);
	op_set_F32(&($o[4][0]), -2.0f);
	op_set_F32(&($o[5][0]), -5.0f);
	op_set_F32(&($o[6][0]), 4.0f);
	op_set_F32(&($o[7][0]), -3.0f);

	for(i = 0; i < 8; i++){
		printf("%f,%fi;", $i[i][0].value,$i[i][1].value);
	}
	printf("\n");
	%%
}

module test16 (0){
	input [F32][16][2] i;
	output [F32][16][2] o;

	%%
	int i;

	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);
	op_set_F32(&($o[4][0]), -2.0f);
	op_set_F32(&($o[5][0]), -5.0f);
	op_set_F32(&($o[6][0]), 4.0f);
	op_set_F32(&($o[7][0]), -3.0f);
	op_set_F32(&($o[8][0]), 6.0f);
	op_set_F32(&($o[9][0]), -2.0f);
	op_set_F32(&($o[10][0]), -4.0f);
	op_set_F32(&($o[11][0]), -5.0f);
	op_set_F32(&($o[12][0]), 2.0f);
	op_set_F32(&($o[13][0]), 3.0f);
	op_set_F32(&($o[14][0]), 1.0f);
	op_set_F32(&($o[15][0]), 0.0f);
	for(i = 0; i < 16; i++){
		printf("%f,%fi;", $i[i][0].value,$i[i][1].value);
	}
	printf("\n");
	%%
}
module test32 (0){
	input [F32][32][2] i;
	output [F32][32][2] o;

	%%
	int i;

	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);
	op_set_F32(&($o[4][0]), -2.0f);
	op_set_F32(&($o[5][0]), -5.0f);
	op_set_F32(&($o[6][0]), 4.0f);
	op_set_F32(&($o[7][0]), -3.0f);

	op_set_F32(&($o[8][0]), 6.0f);
	op_set_F32(&($o[9][0]), -2.0f);
	op_set_F32(&($o[10][0]), -4.0f);
	op_set_F32(&($o[11][0]), -5.0f);
	op_set_F32(&($o[12][0]), 2.0f);
	op_set_F32(&($o[13][0]), 3.0f);
	op_set_F32(&($o[14][0]), 1.0f);
	op_set_F32(&($o[15][0]), 0.0f);

	op_set_F32(&($o[16][0]), 1.0f);
	op_set_F32(&($o[17][0]), 2.0f);
	op_set_F32(&($o[18][0]), -1.0f);
	op_set_F32(&($o[19][0]), 3.0f);
	op_set_F32(&($o[20][0]), -2.0f);
	op_set_F32(&($o[21][0]), -5.0f);
	op_set_F32(&($o[22][0]), 4.0f);
	op_set_F32(&($o[23][0]), -3.0f);

	op_set_F32(&($o[24][0]), 6.0f);
	op_set_F32(&($o[25][0]), -2.0f);
	op_set_F32(&($o[26][0]), -4.0f);
	op_set_F32(&($o[27][0]), -5.0f);
	op_set_F32(&($o[28][0]), 2.0f);
	op_set_F32(&($o[29][0]), 3.0f);
	op_set_F32(&($o[30][0]), 1.0f);
	op_set_F32(&($o[31][0]), 0.0f);

	
	for(i = 0; i < 32; i++){
		printf("[%3d]%f,%f\n", i, $i[i][0].value,$i[i][1].value);
		if((i & 3) ==3){
			printf("\n");
		}
	}
	printf("\n");
	%%
}


module test64 (0){
	input [F32][64][2] i;
	output [F32][64][2] o;

	%%
	int i;

	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);
	op_set_F32(&($o[4][0]), -2.0f);
	op_set_F32(&($o[5][0]), -5.0f);
	op_set_F32(&($o[6][0]), 4.0f);
	op_set_F32(&($o[7][0]), -3.0f);

	op_set_F32(&($o[8][0]), 6.0f);
	op_set_F32(&($o[9][0]), -2.0f);
	op_set_F32(&($o[10][0]), -4.0f);
	op_set_F32(&($o[11][0]), -5.0f);
	op_set_F32(&($o[12][0]), 2.0f);
	op_set_F32(&($o[13][0]), 3.0f);
	op_set_F32(&($o[14][0]), 1.0f);
	op_set_F32(&($o[15][0]), 0.0f);

	op_set_F32(&($o[16][0]), 1.0f);
	op_set_F32(&($o[17][0]), 2.0f);
	op_set_F32(&($o[18][0]), -1.0f);
	op_set_F32(&($o[19][0]), 3.0f);
	op_set_F32(&($o[20][0]), -2.0f);
	op_set_F32(&($o[21][0]), -5.0f);
	op_set_F32(&($o[22][0]), 4.0f);
	op_set_F32(&($o[23][0]), -3.0f);

	op_set_F32(&($o[24][0]), 6.0f);
	op_set_F32(&($o[25][0]), -2.0f);
	op_set_F32(&($o[26][0]), -4.0f);
	op_set_F32(&($o[27][0]), -5.0f);
	op_set_F32(&($o[28][0]), 2.0f);
	op_set_F32(&($o[29][0]), 3.0f);
	op_set_F32(&($o[30][0]), 1.0f);
	op_set_F32(&($o[31][0]), 0.0f);

	op_set_F32(&($o[32][0]), 1.0f);
	op_set_F32(&($o[33][0]), 2.0f);
	op_set_F32(&($o[34][0]), -1.0f);
	op_set_F32(&($o[35][0]), 3.0f);
	op_set_F32(&($o[36][0]), -2.0f);
	op_set_F32(&($o[37][0]), -5.0f);
	op_set_F32(&($o[38][0]), 9.0f);
	op_set_F32(&($o[39][0]), -3.0f);

	op_set_F32(&($o[40][0]), 6.0f);
	op_set_F32(&($o[41][0]), -2.0f);
	op_set_F32(&($o[42][0]), -4.0f);
	op_set_F32(&($o[43][0]), -5.0f);
	op_set_F32(&($o[44][0]), 4.0f);
	op_set_F32(&($o[45][0]), 3.0f);
	op_set_F32(&($o[46][0]), 1.0f);
	op_set_F32(&($o[47][0]), 0.0f);

	op_set_F32(&($o[48][0]), 1.0f);
	op_set_F32(&($o[49][0]), 1.0f);
	op_set_F32(&($o[50][0]), -1.0f);
	op_set_F32(&($o[51][0]), 0.0f);
	op_set_F32(&($o[52][0]), -2.0f);
	op_set_F32(&($o[53][0]), -5.0f);
	op_set_F32(&($o[54][0]), 4.0f);
	op_set_F32(&($o[55][0]), 3.0f);

	op_set_F32(&($o[56][0]), 0.0f);
	op_set_F32(&($o[57][0]), -2.0f);
	op_set_F32(&($o[58][0]), -4.0f);
	op_set_F32(&($o[59][0]), -8.0f);
	op_set_F32(&($o[60][0]), 2.0f);
	op_set_F32(&($o[61][0]), 3.0f);
	op_set_F32(&($o[62][0]), 1.0f);
	op_set_F32(&($o[63][0]), 0.0f);

	for(i = 0; i < 64; i++){
		printf("[%3d]%f,%f\n", i, $i[i][0].value,$i[i][1].value);
		if((i & 3) ==3){
			printf("\n");
		}
	}
	printf("\n");
	%%
}

module test128 (0){
	input [F32][128][2] i;
	output [F32][128][2] o;

	%%
	int i;

	op_set_F32(&($o[0][0]), 1.0f);
	op_set_F32(&($o[1][0]), 2.0f);
	op_set_F32(&($o[2][0]), -1.0f);
	op_set_F32(&($o[3][0]), 3.0f);
	op_set_F32(&($o[4][0]), -2.0f);
	op_set_F32(&($o[5][0]), -5.0f);
	op_set_F32(&($o[6][0]), 4.0f);
	op_set_F32(&($o[7][0]), -3.0f);

	op_set_F32(&($o[8][0]), 6.0f);
	op_set_F32(&($o[9][0]), -2.0f);
	op_set_F32(&($o[10][0]), -4.0f);
	op_set_F32(&($o[11][0]), -5.0f);
	op_set_F32(&($o[12][0]), 2.0f);
	op_set_F32(&($o[13][0]), 3.0f);
	op_set_F32(&($o[14][0]), 1.0f);
	op_set_F32(&($o[15][0]), 0.0f);

	op_set_F32(&($o[16][0]), 1.0f);
	op_set_F32(&($o[17][0]), 2.0f);
	op_set_F32(&($o[18][0]), -1.0f);
	op_set_F32(&($o[19][0]), 3.0f);
	op_set_F32(&($o[20][0]), -2.0f);
	op_set_F32(&($o[21][0]), -5.0f);
	op_set_F32(&($o[22][0]), 4.0f);
	op_set_F32(&($o[23][0]), -3.0f);

	op_set_F32(&($o[24][0]), 6.0f);
	op_set_F32(&($o[25][0]), -2.0f);
	op_set_F32(&($o[26][0]), -4.0f);
	op_set_F32(&($o[27][0]), -5.0f);
	op_set_F32(&($o[28][0]), 2.0f);
	op_set_F32(&($o[29][0]), 3.0f);
	op_set_F32(&($o[30][0]), 1.0f);
	op_set_F32(&($o[31][0]), 0.0f);

	op_set_F32(&($o[32][0]), 1.0f);
	op_set_F32(&($o[33][0]), 2.0f);
	op_set_F32(&($o[34][0]), -1.0f);
	op_set_F32(&($o[35][0]), 3.0f);
	op_set_F32(&($o[36][0]), -2.0f);
	op_set_F32(&($o[37][0]), -5.0f);
	op_set_F32(&($o[38][0]), 9.0f);
	op_set_F32(&($o[39][0]), -3.0f);

	op_set_F32(&($o[40][0]), 6.0f);
	op_set_F32(&($o[41][0]), -2.0f);
	op_set_F32(&($o[42][0]), -4.0f);
	op_set_F32(&($o[43][0]), -5.0f);
	op_set_F32(&($o[44][0]), 4.0f);
	op_set_F32(&($o[45][0]), 3.0f);
	op_set_F32(&($o[46][0]), 1.0f);
	op_set_F32(&($o[47][0]), 0.0f);

	op_set_F32(&($o[48][0]), 1.0f);
	op_set_F32(&($o[49][0]), 1.0f);
	op_set_F32(&($o[50][0]), -1.0f);
	op_set_F32(&($o[51][0]), 0.0f);
	op_set_F32(&($o[52][0]), -2.0f);
	op_set_F32(&($o[53][0]), -5.0f);
	op_set_F32(&($o[54][0]), 4.0f);
	op_set_F32(&($o[55][0]), 3.0f);

	op_set_F32(&($o[56][0]), 0.0f);
	op_set_F32(&($o[57][0]), -2.0f);
	op_set_F32(&($o[58][0]), -4.0f);
	op_set_F32(&($o[59][0]), -8.0f);
	op_set_F32(&($o[60][0]), 2.0f);
	op_set_F32(&($o[61][0]), 3.0f);
	op_set_F32(&($o[62][0]), 1.0f);
	op_set_F32(&($o[63][0]), 0.0f);

	op_set_F32(&($o[64][0]), 1.0f);
	op_set_F32(&($o[65][0]), 2.0f);
	op_set_F32(&($o[66][0]), -1.0f);
	op_set_F32(&($o[67][0]), 3.0f);
	op_set_F32(&($o[68][0]), -2.0f);
	op_set_F32(&($o[69][0]), -5.0f);
	op_set_F32(&($o[70][0]), 4.0f);
	op_set_F32(&($o[71][0]), -3.0f);

	op_set_F32(&($o[72][0]), 6.0f);
	op_set_F32(&($o[73][0]), -2.0f);
	op_set_F32(&($o[74][0]), -4.0f);
	op_set_F32(&($o[75][0]), -5.0f);
	op_set_F32(&($o[76][0]), 2.0f);
	op_set_F32(&($o[77][0]), 3.0f);
	op_set_F32(&($o[78][0]), 1.0f);
	op_set_F32(&($o[79][0]), 0.0f);

	op_set_F32(&($o[80][0]), 1.0f);
	op_set_F32(&($o[81][0]), 2.0f);
	op_set_F32(&($o[82][0]), -1.0f);
	op_set_F32(&($o[83][0]), 3.0f);
	op_set_F32(&($o[84][0]), -2.0f);
	op_set_F32(&($o[85][0]), -5.0f);
	op_set_F32(&($o[86][0]), 4.0f);
	op_set_F32(&($o[87][0]), -3.0f);

	op_set_F32(&($o[88][0]), 6.0f);
	op_set_F32(&($o[89][0]), -2.0f);
	op_set_F32(&($o[90][0]), -4.0f);
	op_set_F32(&($o[91][0]), -5.0f);
	op_set_F32(&($o[92][0]), 2.0f);
	op_set_F32(&($o[93][0]), 3.0f);
	op_set_F32(&($o[94][0]), 1.0f);
	op_set_F32(&($o[95][0]), 0.0f);

	op_set_F32(&($o[96][0]), 1.0f);
	op_set_F32(&($o[97][0]), 2.0f);
	op_set_F32(&($o[98][0]), -1.0f);
	op_set_F32(&($o[99][0]), 3.0f);
	op_set_F32(&($o[100][0]), -2.0f);
	op_set_F32(&($o[101][0]), -5.0f);
	op_set_F32(&($o[102][0]), 9.0f);
	op_set_F32(&($o[103][0]), -3.0f);

	op_set_F32(&($o[104][0]), 6.0f);
	op_set_F32(&($o[105][0]), -2.0f);
	op_set_F32(&($o[106][0]), -4.0f);
	op_set_F32(&($o[107][0]), -5.0f);
	op_set_F32(&($o[108][0]), 4.0f);
	op_set_F32(&($o[109][0]), 3.0f);
	op_set_F32(&($o[110][0]), 1.0f);
	op_set_F32(&($o[111][0]), 0.0f);

	op_set_F32(&($o[112][0]), 3.0f);
	op_set_F32(&($o[113][0]), 3.0f);
	op_set_F32(&($o[114][0]), 0.0f);
	op_set_F32(&($o[115][0]), 1.0f);
	op_set_F32(&($o[116][0]), -1.0f);
	op_set_F32(&($o[117][0]), -4.0f);
	op_set_F32(&($o[118][0]), 5.0f);
	op_set_F32(&($o[119][0]), 4.0f);

	op_set_F32(&($o[120][0]), 0.0f);
	op_set_F32(&($o[121][0]), -2.0f);
	op_set_F32(&($o[122][0]), -4.0f);
	op_set_F32(&($o[123][0]), -8.0f);
	op_set_F32(&($o[124][0]), 2.0f);
	op_set_F32(&($o[125][0]), 3.0f);
	op_set_F32(&($o[126][0]), 1.0f);
	op_set_F32(&($o[127][0]), 0.0f);


	for(i = 0; i < 128; i++){
		printf("[%3d]%f,%f\n", i, $i[i][0].value,$i[i][1].value);
		if((i & 3) ==3){
			printf("\n");
		}
	}
	printf("\n");
	%%
}

module test256 (0){
	input [F32][256][2] i;
	output [F32][256][2] o;

	%%
	int i;
	op_set_F32(&($o[0][0]), -7.220931);
	op_set_F32(&($o[1][0]), 9.038827);
	op_set_F32(&($o[2][0]), -2.851240);
	op_set_F32(&($o[3][0]), 4.801472);
	op_set_F32(&($o[4][0]), -4.289579);
	op_set_F32(&($o[5][0]), 8.438107);
	op_set_F32(&($o[6][0]), -0.946826);
	op_set_F32(&($o[7][0]), 3.112054);
	op_set_F32(&($o[8][0]), -6.967083);
	op_set_F32(&($o[9][0]), 4.843222);
	op_set_F32(&($o[10][0]), -4.789935);
	op_set_F32(&($o[11][0]), 4.151928);
	op_set_F32(&($o[12][0]), -6.954022);
	op_set_F32(&($o[13][0]), 4.630831);
	op_set_F32(&($o[14][0]), -2.280737);
	op_set_F32(&($o[15][0]), 0.538688);
	op_set_F32(&($o[16][0]), -1.550713);
	op_set_F32(&($o[17][0]), 6.033381);
	op_set_F32(&($o[18][0]), -0.519802);
	op_set_F32(&($o[19][0]), 1.486530);
	op_set_F32(&($o[20][0]), -5.688250);
	op_set_F32(&($o[21][0]), 5.666687);
	op_set_F32(&($o[22][0]), -5.371386);
	op_set_F32(&($o[23][0]), 1.420835);
	op_set_F32(&($o[24][0]), -5.343527);
	op_set_F32(&($o[25][0]), 1.057139);
	op_set_F32(&($o[26][0]), -3.591250);
	op_set_F32(&($o[27][0]), 1.300603);
	op_set_F32(&($o[28][0]), -4.734980);
	op_set_F32(&($o[29][0]), 3.499892);
	op_set_F32(&($o[30][0]), -0.438996);
	op_set_F32(&($o[31][0]), 1.219968);
	op_set_F32(&($o[32][0]), -4.343047);
	op_set_F32(&($o[33][0]), 9.024784);
	op_set_F32(&($o[34][0]), -2.564719);
	op_set_F32(&($o[35][0]), 2.579229);
	op_set_F32(&($o[36][0]), -2.687817);
	op_set_F32(&($o[37][0]), 3.513853);
	op_set_F32(&($o[38][0]), -0.569581);
	op_set_F32(&($o[39][0]), 1.657242);
	op_set_F32(&($o[40][0]), -6.624399);
	op_set_F32(&($o[41][0]), 9.383751);
	op_set_F32(&($o[42][0]), -0.012765);
	op_set_F32(&($o[43][0]), 0.030034);
	op_set_F32(&($o[44][0]), -0.071181);
	op_set_F32(&($o[45][0]), 0.171629);
	op_set_F32(&($o[46][0]), -0.431069);
	op_set_F32(&($o[47][0]), 1.194522);
	op_set_F32(&($o[48][0]), -4.222063);
	op_set_F32(&($o[49][0]), 7.705439);
	op_set_F32(&($o[50][0]), -7.404520);
	op_set_F32(&($o[51][0]), 2.153498);
	op_set_F32(&($o[52][0]), -9.676741);
	op_set_F32(&($o[53][0]), 6.282892);
	op_set_F32(&($o[54][0]), -4.176698);
	op_set_F32(&($o[55][0]), 7.218278);
	op_set_F32(&($o[56][0]), -8.994308);
	op_set_F32(&($o[57][0]), 1.944259);
	op_set_F32(&($o[58][0]), -8.329707);
	op_set_F32(&($o[59][0]), 8.875529);
	op_set_F32(&($o[60][0]), -9.543756);
	op_set_F32(&($o[61][0]), 3.415672);
	op_set_F32(&($o[62][0]), -9.659491);
	op_set_F32(&($o[63][0]), 5.908969);
	op_set_F32(&($o[64][0]), -8.742902);
	op_set_F32(&($o[65][0]), 6.896734);
	op_set_F32(&($o[66][0]), -3.703304);
	op_set_F32(&($o[67][0]), 2.380192);
	op_set_F32(&($o[68][0]), -1.234961);
	op_set_F32(&($o[69][0]), 4.414938);
	op_set_F32(&($o[70][0]), -9.822628);
	op_set_F32(&($o[71][0]), 9.468978);
	op_set_F32(&($o[72][0]), -1.818962);
	op_set_F32(&($o[73][0]), 7.564996);
	op_set_F32(&($o[74][0]), -4.931263);
	op_set_F32(&($o[75][0]), 5.856507);
	op_set_F32(&($o[76][0]), -8.002895);
	op_set_F32(&($o[77][0]), 2.773103);
	op_set_F32(&($o[78][0]), -4.179165);
	op_set_F32(&($o[79][0]), 7.244666);
	op_set_F32(&($o[80][0]), -9.437697);
	op_set_F32(&($o[81][0]), 1.154344);
	op_set_F32(&($o[82][0]), -4.033674);
	op_set_F32(&($o[83][0]), 5.709320);
	op_set_F32(&($o[84][0]), -5.956141);
	op_set_F32(&($o[85][0]), 9.412993);
	op_set_F32(&($o[86][0]), -0.630834);
	op_set_F32(&($o[87][0]), 1.874102);
	op_set_F32(&($o[88][0]), -7.897659);
	op_set_F32(&($o[89][0]), 0.853541);
	op_set_F32(&($o[90][0]), -2.725820);
	op_set_F32(&($o[91][0]), 3.808510);
	op_set_F32(&($o[92][0]), -3.416659);
	op_set_F32(&($o[93][0]), 9.668539);
	op_set_F32(&($o[94][0]), -6.105018);
	op_set_F32(&($o[95][0]), 1.556991);
	op_set_F32(&($o[96][0]), -6.067579);
	op_set_F32(&($o[97][0]), 1.013656);
	op_set_F32(&($o[98][0]), -3.399455);
	op_set_F32(&($o[99][0]), 9.511020);
	op_set_F32(&($o[100][0]), -2.715289);
	op_set_F32(&($o[101][0]), 3.726571);
	op_set_F32(&($o[102][0]), -2.607509);
	op_set_F32(&($o[103][0]), 2.900678);
	op_set_F32(&($o[104][0]), -5.201519);
	op_set_F32(&($o[105][0]), 9.227360);
	op_set_F32(&($o[106][0]), -6.736195);
	op_set_F32(&($o[107][0]), 1.139012);
	op_set_F32(&($o[108][0]), -3.962637);
	op_set_F32(&($o[109][0]), 4.975065);
	op_set_F32(&($o[110][0]), -6.392918);
	op_set_F32(&($o[111][0]), 5.828836);
	op_set_F32(&($o[112][0]), -7.614799);
	op_set_F32(&($o[113][0]), 5.803789);
	op_set_F32(&($o[114][0]), -7.264837);
	op_set_F32(&($o[115][0]), 9.777567);
	op_set_F32(&($o[116][0]), -8.480330);
	op_set_F32(&($o[117][0]), 1.759978);
	op_set_F32(&($o[118][0]), -7.215871);
	op_set_F32(&($o[119][0]), 8.953928);
	op_set_F32(&($o[120][0]), -1.125012);
	op_set_F32(&($o[121][0]), 3.898182);
	op_set_F32(&($o[122][0]), -4.317567);
	op_set_F32(&($o[123][0]), 8.744496);
	op_set_F32(&($o[124][0]), -6.928329);
	op_set_F32(&($o[125][0]), 4.214038);
	op_set_F32(&($o[126][0]), -7.618964);
	op_set_F32(&($o[127][0]), 5.876989);
	op_set_F32(&($o[128][0]), -8.291151);
	op_set_F32(&($o[129][0]), 8.144471);
	op_set_F32(&($o[130][0]), -5.390470);
	op_set_F32(&($o[131][0]), 1.670872);
	op_set_F32(&($o[132][0]), -6.701654);
	op_set_F32(&($o[133][0]), 0.594040);
	op_set_F32(&($o[134][0]), -1.742938);
	op_set_F32(&($o[135][0]), 7.116307);
	op_set_F32(&($o[136][0]), -7.293985);
	op_set_F32(&($o[137][0]), 0.270143);
	op_set_F32(&($o[138][0]), -0.705111);
	op_set_F32(&($o[139][0]), 2.147141);
	op_set_F32(&($o[140][0]), -9.634523);
	op_set_F32(&($o[141][0]), 5.368819);
	op_set_F32(&($o[142][0]), -1.387251);
	op_set_F32(&($o[143][0]), 5.170631);
	op_set_F32(&($o[144][0]), -8.834696);
	op_set_F32(&($o[145][0]), 8.725051);
	op_set_F32(&($o[146][0]), -6.543143);
	op_set_F32(&($o[147][0]), 8.123670);
	op_set_F32(&($o[148][0]), -5.003396);
	op_set_F32(&($o[149][0]), 6.741923);
	op_set_F32(&($o[150][0]), -1.229624);
	op_set_F32(&($o[151][0]), 4.389297);
	op_set_F32(&($o[152][0]), -9.536879);
	op_set_F32(&($o[153][0]), 3.268366);
	op_set_F32(&($o[154][0]), -8.330196);
	op_set_F32(&($o[155][0]), 8.884831);
	op_set_F32(&($o[156][0]), -9.730728);
	op_set_F32(&($o[157][0]), 7.456963);
	op_set_F32(&($o[158][0]), -3.055592);
	op_set_F32(&($o[159][0]), 6.486732);
	op_set_F32(&($o[160][0]), -7.256639);
	op_set_F32(&($o[161][0]), 9.639342);
	op_set_F32(&($o[162][0]), -5.472979);
	op_set_F32(&($o[163][0]), 2.760272);
	op_set_F32(&($o[164][0]), -4.078139);
	op_set_F32(&($o[165][0]), 6.174066);
	op_set_F32(&($o[166][0]), -2.566400);
	op_set_F32(&($o[167][0]), 2.591786);
	op_set_F32(&($o[168][0]), -2.782131);
	op_set_F32(&($o[169][0]), 4.250443);
	op_set_F32(&($o[170][0]), -8.012306);
	op_set_F32(&($o[171][0]), 2.945838);
	op_set_F32(&($o[172][0]), -5.571224);
	op_set_F32(&($o[173][0]), 4.075201);
	op_set_F32(&($o[174][0]), -6.143238);
	op_set_F32(&($o[175][0]), 2.114547);
	op_set_F32(&($o[176][0]), -9.419347);
	op_set_F32(&($o[177][0]), 0.765367);
	op_set_F32(&($o[178][0]), -2.376745);
	op_set_F32(&($o[179][0]), 1.210499);
	op_set_F32(&($o[180][0]), -4.297875);
	op_set_F32(&($o[181][0]), 8.528758);
	op_set_F32(&($o[182][0]), -2.697009);
	op_set_F32(&($o[183][0]), 3.584858);
	op_set_F32(&($o[184][0]), -1.239773);
	op_set_F32(&($o[185][0]), 4.438107);
	op_set_F32(&($o[186][0]), -0.081969);
	op_set_F32(&($o[187][0]), 0.198527);
	op_set_F32(&($o[188][0]), -0.503965);
	op_set_F32(&($o[189][0]), 1.433260);
	op_set_F32(&($o[190][0]), -5.408064);
	op_set_F32(&($o[191][0]), 1.902020);
	op_set_F32(&($o[192][0]), -8.068408);
	op_set_F32(&($o[193][0]), 3.979275);
	op_set_F32(&($o[194][0]), -5.146137);
	op_set_F32(&($o[195][0]), 8.524683);
	op_set_F32(&($o[196][0]), -2.617975);
	op_set_F32(&($o[197][0]), 2.979855);
	op_set_F32(&($o[198][0]), -5.852394);
	op_set_F32(&($o[199][0]), 7.945123);
	op_set_F32(&($o[200][0]), -1.716561);
	op_set_F32(&($o[201][0]), 6.963333);
	op_set_F32(&($o[202][0]), -4.782206);
	op_set_F32(&($o[203][0]), 4.059853);
	op_set_F32(&($o[204][0]), -5.982467);
	op_set_F32(&($o[205][0]), 9.788883);
	op_set_F32(&($o[206][0]), -8.728212);
	op_set_F32(&($o[207][0]), 6.605707);
	op_set_F32(&($o[208][0]), -9.092716);
	op_set_F32(&($o[209][0]), 3.954445);
	op_set_F32(&($o[210][0]), -4.891033);
	op_set_F32(&($o[211][0]), 5.367226);
	op_set_F32(&($o[212][0]), -1.366429);
	op_set_F32(&($o[213][0]), 5.064573);
	op_set_F32(&($o[214][0]), -7.501006);
	op_set_F32(&($o[215][0]), 3.817453);
	op_set_F32(&($o[216][0]), -3.505785);
	op_set_F32(&($o[217][0]), 0.494068);
	op_set_F32(&($o[218][0]), -1.400223);
	op_set_F32(&($o[219][0]), 5.237147);
	op_set_F32(&($o[220][0]), -9.682635);
	op_set_F32(&($o[221][0]), 6.410784);
	op_set_F32(&($o[222][0]), -6.099389);
	op_set_F32(&($o[223][0]), 1.475117);
	op_set_F32(&($o[224][0]), -5.627744);
	op_set_F32(&($o[225][0]), 4.840418);
	op_set_F32(&($o[226][0]), -4.756225);
	op_set_F32(&($o[227][0]), 3.751238);
	op_set_F32(&($o[228][0]), -2.849682);
	op_set_F32(&($o[229][0]), 4.788943);
	op_set_F32(&($o[230][0]), -4.140097);
	op_set_F32(&($o[231][0]), 6.828230);
	op_set_F32(&($o[232][0]), -2.602788);
	op_set_F32(&($o[233][0]), 2.865031);
	op_set_F32(&($o[234][0]), -4.912573);
	op_set_F32(&($o[235][0]), 5.628793);
	op_set_F32(&($o[236][0]), -4.854686);
	op_set_F32(&($o[237][0]), 4.927945);
	op_set_F32(&($o[238][0]), -5.816033);
	op_set_F32(&($o[239][0]), 7.435763);
	op_set_F32(&($o[240][0]), -2.690263);
	op_set_F32(&($o[241][0]), 3.532731);
	op_set_F32(&($o[242][0]), -0.746777);
	op_set_F32(&($o[243][0]), 2.305133);
	op_set_F32(&($o[244][0]), -0.707652);
	op_set_F32(&($o[245][0]), 2.156676);
	op_set_F32(&($o[246][0]), -9.697872);
	op_set_F32(&($o[247][0]), 6.741750);
	op_set_F32(&($o[248][0]), -1.226880);
	op_set_F32(&($o[249][0]), 4.376136);
	op_set_F32(&($o[250][0]), -9.390721);
	op_set_F32(&($o[251][0]), 0.159927);
	op_set_F32(&($o[252][0]), -0.399806);
	op_set_F32(&($o[253][0]), 1.095392);
	op_set_F32(&($o[254][0]), -3.763102);
	op_set_F32(&($o[255][0]), 2.966591);

	for(i = 0; i < 256; i++){
		printf("[%3d]%f,%f\n", i, $i[i][0].value,$i[i][1].value);
		if((i & 3) ==3){
			printf("\n");
		}
	}
	printf("\n");
	%%
}

module top {
	#contain FFT2 fft;
	#contain test2 t;
	contain FFT256 fft;
	contain test256 t;
	net fft.i, t.o;
	net fft.o, t.i;
}

