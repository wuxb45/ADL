

@sb_table.adl

module SubBytes {
	input [U08][4][4] i;

	output [U08][4][4] o;

	contain SubByte s00, s01, s02, s03;
	contain SubByte s10, s11, s12, s13;
	contain SubByte s20, s21, s22, s23;
	contain SubByte s30, s31, s32, s33;
	
	net s00.i , i[0][0];
	net s01.i , i[0][1];
	net s02.i , i[0][2];
	net s03.i , i[0][3];

	net s10.i , i[1][0];
	net s11.i , i[1][1];
	net s12.i , i[1][2];
	net s13.i , i[1][3];

	net s20.i , i[2][0];
	net s21.i , i[2][1];
	net s22.i , i[2][2];
	net s23.i , i[2][3];

	net s30.i , i[3][0];
	net s31.i , i[3][1];
	net s32.i , i[3][2];
	net s33.i , i[3][3];


	net o[0][0] , s00.o;
	net o[0][1] , s01.o;
	net o[0][2] , s02.o;
	net o[0][3] , s03.o;

	net o[1][0] , s10.o;
	net o[1][1] , s11.o;
	net o[1][2] , s12.o;
	net o[1][3] , s13.o;

	net o[2][0] , s20.o;
	net o[2][1] , s21.o;
	net o[2][2] , s22.o;
	net o[2][3] , s23.o;

	net o[3][0] , s30.o;
	net o[3][1] , s31.o;
	net o[3][2] , s32.o;
	net o[3][3] , s33.o;
}


module SubByte(0) {
	input [U08] i;
	output [U08] o;
%%
	$o.value = table_subbytes[$i.value];
%%
}

module SubByte_test(1) {
	input [U08] i;
	output [U08] o;
%%
	printf("Output:[%08x]\nInput > ", $i.value);
	scanf("%x", &($o.value));
%%
}

module SB_top {
	contain SubByte s;
	contain SubByte_test t;

	net t.i , s.o;
	net s.i , t.o;
}

